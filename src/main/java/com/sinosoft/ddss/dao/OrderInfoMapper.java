package com.sinosoft.ddss.dao;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.sinosoft.ddss.common.entity.OrderInfo;
import com.sinosoft.ddss.common.entity.query.OrderInfoQuery;

public interface OrderInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(BigDecimal orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    int insert(OrderInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    int insertSelective(OrderInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    OrderInfo selectByPrimaryKey(BigDecimal orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(OrderInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ddss_orderinfo
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(OrderInfo record);
    
    /**
     * 获取子订单序列
     * @return
     */
    Long getOrderSeq();
    
    /**
	 * 批量添加子单信息
	 * @param shopInfo
	 * @return
	 */
	Integer saveOrder(@Param("list")List<OrderInfo> list);
	
	/**
	 * 根据主单id获取子单信息
	 * @param request
	 * @param shopInfo
	 * @return
	 */
	List<OrderInfo> getOrderInfoByOrderMainId(OrderInfoQuery orderInfoQuery);
	
	/**
	 * 根据主单id获取子单信息不分页
	 * @param request
	 * @param shopInfo
	 * @return
	 */
	List<OrderInfo> getOrderInfoByOrderMainIdNoPage(OrderInfoQuery orderInfoQuery);

	/**
	 * 根据订单状态统计订单数量
	 * @param orderInfoQuery
	 * @return
	 */
	List<OrderInfoQuery> statisticalOrderByStatus(OrderInfoQuery orderInfoQuery);
	
	/**
	 * 修改子订单的状态
	 * 
	 * @param Map
	 * @return
	 */
	Integer updateOrderStatus(Map<String, String> params);

	List<Map<String, Object>> findSonOrderByCond(Map<String, Object> condMap);

	/**
	 * 获取子单详情
	 * @param orderId
	 * @return
	 */
	OrderInfo getOrderInfoById(Long orderId);

	Integer getOrderCountByQuery(OrderInfoQuery orderInfo);
	/**
	 * 热点数据
	 * @return
	 */
	List<OrderInfo> hotData();

	/**
	 * 过滤的定制订单查询
	 * @param orderQuery
	 * @return
	 */
	List<OrderInfo> satisfactionOrderList(OrderInfoQuery orderQuery);

	/**
	 * 查询预警订单ID
	 * @param callPolice
	 * @return
	 */
	List<OrderInfo> queryCallPolice(Map<String, Object> callPolice);
	
	/**
	 * 根据dataid等条件查询待分发和已完成的订单，按时间倒叙
	 * @param orderQuery
	 * @return
	 */
	List<OrderInfo> getOrderInfoByDataId(OrderInfoQuery orderQuery);
	
    List<OrderInfo> selectByOrderMainId(Long orderMainId);
}