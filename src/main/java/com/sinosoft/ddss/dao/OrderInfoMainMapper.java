package com.sinosoft.ddss.dao;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import com.sinosoft.ddss.common.entity.Additional;
import com.sinosoft.ddss.common.entity.OrderInfo;
import com.sinosoft.ddss.common.entity.OrderInfoMain;
import com.sinosoft.ddss.common.entity.query.OrderInfoQuery;

public interface OrderInfoMainMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table ddss_orderinfo_main
	 *
	 * @mbg.generated
	 */
	int insertSelective(OrderInfoMain record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table ddss_orderinfo_main
	 *
	 * @mbg.generated
	 */
	OrderInfoMain selectByPrimaryKey(BigDecimal orderMainId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table ddss_orderinfo_main
	 *
	 * @mbg.generated
	 */
	int updateByPrimaryKeySelective(OrderInfoMain record);

	/**
	 * 获取主订单序列
	 * 
	 * @return
	 */
	Long getOrderMainSeq();

	/**
	 * 按条件查询
	 * 
	 * @param orderInfo
	 * @return
	 */
	List<Additional> listOrder(OrderInfoQuery orderInfo);
	

	/**
	 * 报警查询
	 * 
	 * @param orderInfo
	 * @return
	 */
	List<Additional> QueryCallPolice(Map orderInfo);

	/**
	 * 按条件查询数量
	 * 
	 * @param orderInfo
	 * @return
	 */
	Integer getCountByQuery(OrderInfoQuery orderInfo);
	
	/**
	 * 修改订单状态
	 * @param map
	 * @return
	 */
	Integer updateOrderStatus(Map<String, String> map);

	/**
	 * 订单审核
	 * @param map
	 * @return
	 */
	Integer audit(Map<String, Object> map);

	/**
	 * 取消恢复
	 * @param orderInfoMain
	 * @return
	 */
	Integer cancelOrder(OrderInfoMain orderInfoMain);

	/**
	 * 物理删除订单
	 * @param orderMainIds
	 * @return
	 */
	Integer delOrder(String orderMainId);

	/**
	 * 保存主订单
	 * @param orderInfoMain
	 * @return
	 */
	int saveOrderMain(Additional orderInfoMain);
	
	/**
	 * 查询主单（orderMainIds）
	 * 
	 * @param orderInfo
	 * @return
	 */
	List<OrderInfoMain> listOrderByOrderMainIds(String orderMainIds);

	/**
	 * 根据主订单id获取主单信息
	 * @param orderMainId
	 * @return
	 */
	Additional getOrderMainById(Long orderMainId);

	/**
	 * 修改主单信息
	 * @param orderMain
	 * @return
	 */
	Integer updateOrderMain(Additional orderMain);

	List<Map<String, Object>> findOrderBySonOrderId(String sonOrderIds);

	/**
	 * 根据订单状态查询订单数量（定制订购）
	 * @param orderInfoQuery
	 * @return
	 */
	List<OrderInfoQuery> statisticalOrderMainByStatus(OrderInfoQuery orderInfoQuery);
	
	/**
	 * 根据订单状态查询订单数量（采集单）
	 * @param orderInfoQuery
	 * @return
	 */
	List<OrderInfoQuery> statisticalCollectinfoByStatus(OrderInfoQuery orderInfoQuery);

	Double sumDataSizeToday(String userName);

	/**
	 * 订单类型为 0：普通订单，1：重处理订单2 ：普通观测需求 
	 * 主订单状态为2：处理中  
	 * 子订单状态为3：待分发
	 * @return
	 */
	List<Additional> dopDemand(OrderInfoMain orderInfoMain);
	
}